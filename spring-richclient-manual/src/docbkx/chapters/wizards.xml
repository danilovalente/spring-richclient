<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">

<chapter id="wizards" xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>Wizards</title>

  <toc/>
  
  <section id="wizards:why">
    <title>Why use wizards</title>
    <para>
      Wizards make flow-like form entry easy. If you have a flow of screens, with the input of the first screen
      affecting the behavior and possibly layout of one or more the next screens, wizards are an ideal way to accomplish
      this.
    </para>
    <para>
      Spring Rich Client has built-in wizard functionality. 
    </para>
  </section>
  <section id="wizards:create">
    <title>Creating a wizard</title>
    <para>
      In Spring Rich Client, a wizard consists of wizard pages. Every wizard page can determine which page is next or
      previous and whether the wizard can stop at this page. Wizards are mostly form-based, which means validation is
      included as well. The wizard framework will not allow a user to change to another screen as long as the current is
      invalid.
    </para>
    <para>
      Creating a wizard is quite straightforward. You create pages (or even just forms) and add them to a wizard.
      Creating wizard will most of the time mean subclassing the AbstractWizard class and building a wizard as a
      separate component.
    </para>
    <programlisting language="java:nogutter"><xi:include href="../codesamples/wizards/java/sample1.java" parse="text"/></programlisting>
    <para>
      This wizard will make 2 forms and when the wizard completes (the user presses finish), it’ll do some logic.
    </para>
  </section>
  <section id="wizards:show">
    <title>Showing wizards</title>
    <para>
      There are various ways for showing a wizard. Standard, Spring Rich Client provides you with a dialog class that
      can show a wizard (which most of the time is the way you’ll show a wizard).
    </para>
    <para>
      You can off course create a view class for your wizard, so you can display your wizard as a view too. To implement
      this, take a look at WizardDialog.
    </para>
  </section>
</chapter>
