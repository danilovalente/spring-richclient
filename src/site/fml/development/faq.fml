<?xml version="1.0" encoding="UTF-8"?>
<faqs title="Frequently Asked Questions">
  <part>
    <faq>
      <question>How do I build the project?</question>
      <answer>
        <p>
          See <a href="developmentSetup.html">development setup</a>.
        </p>
      </answer>
    </faq>
    <faq>
      <question>Can I build faster?</question>
      <answer>
        <p>
          Yes, by:
        </p>
        <ul>
            <li>
                Using the fast build profile with <code>-Pfast</code>, that does:
                <ul>
                    <li>Skipping test with <code>-Dmaven.test.skip</code></li>
                </ul>
            </li>
            <li>Building offline (doesn't work the first time) with <code>-o</code></li>
            <li>Building only the module you need</li>
            <li>Only compiling if you need nothing more with <code>mvn compile</code></li>
            <li>
                Using a mirror of Ibiblio, which are a lot faster.
                See <a href="http://maven.apache.org">Maven's documentation</a>.
            </li>
        </ul>
        <p>
            For example: <code>/sandbox/mvn -o -Pfast install</code>.
        </p>
      </answer>
    </faq>
    <faq>
      <question>How do I add a library available in Ibiblio to the project?</question>
      <answer>
        <p>
          Search <a href="http://www.ibiblio.org/maven2">http://www.ibiblio.org/maven2</a>,
          starting with the <b>org</b> and <b>net</b> subdirectories. For example
          <a href="http://www.ibiblio.org/maven2/org/springframework/spring-core/1.2.6/">
              http://www.ibiblio.org/maven2/org/springframework/spring-core/1.2.6/
          </a> has groupId org.springframework, artifactId spring-core and version 1.2.6.
          Note: <a href="http://www.mvnrepository.com">http://www.mvnrepository.com</a> is an easier to search.
        </p>
        <ul>
          <li>
            Always prefer a longer groupIds (org.springframework is better then springframework).
          </li>
          <li>
            Always prefer smaller peices (don't take spring-full).
          </li>
        </ul>
        <p>
          First add it as a dependency in dependencyManagement entity in the root pom.xml.
          This way the version only is defined on one place, making it easy to upgrade later.
          However it must stil be added to the dependencies list of each module that requires it.
        </p>
        <p>
          Then decide which modules will <b>directly</b> (not transitively) use the dependency.
          Add it in the dependencies entity in the pom.xml of those modules without version.
        </p>
        <p>
          Do a mvn install eclipse:eclipse idea:idea to download the library
          and configure it your IDE. If it works, send a mail to the mailing list
          to notify everyone to do this too.
        </p>
      </answer>
    </faq>
    <faq>
      <question>How do I add a library not available in Ibiblio to the project?</question>
      <answer>
        <p>
          If the library is not available in Ibiblio,
          it can be added it to our own remote repository with mvn deploy:deploy-file.
        </p>
        <p>
          Warning: Some libraries have their pom on Ibiblio but not their artifact (jar, war, ...),
          such as Sun's older activation jars.
          Add the jar to our own remote repository but use the pom of Ibiblio as it will
          have decently configured transitive dependencies.
        </p>
      </answer>
    </faq>
    <faq>
      <question>Do we have our own remote repository for dependencies not in Ibiblio?</question>
      <answer>
        <p>
          Yes, it's at
          <a href="http://spring-rich-c.sf.net/maven2repository">
              http://spring-rich-c.sf.net/maven2repository
          </a>.
        </p>
      </answer>
    </faq>
  </part>
</faqs>