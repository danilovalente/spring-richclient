<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<html>
<head>
<meta name="GENERATOR" content="Solutionsoft HelpBreeze JavaHelp Edition">
<meta http-equiv="Content-Type" content="text/html;charset=ISO-8859-1" >
<title>Overview</title>
<link rel="stylesheet" type="text/css" href="../javahelp.css">
</head>
<body bgcolor="#ffffff">
<h1>Overview</h1>
<p>This application provides a very simple introduction to the 
Spring Richclient platform. It is intended to highlight the common
models for working with the platform (including configuration and run-time access to platform services) and how to
organize the basic pieces of an application using the platform.</p>
<p>This sample provides an implementation of a&nbsp;<em>trivial</em> address 
book. Trust me when I say trivial :-) It has no persistence, no security, and no 
complex business logic. The focus of the sample is how to work with the Spring 
Rich platform, not about how to build a great address book.</p>
<p>Other samples will introduce more complex topics like user management (security),
alternate page/view layouts, complex data binding, remoting, etc.</p>
<p>The Spring Rich platform relies on the <a href="http://www.springframework.org/">Spring</a>
project to manage the application context with all the associated benefits it offers.</p>
<p>A start at the Spring Rich Client documentation can be found on the
<a href="http://opensource.atlassian.com/confluence/spring/display/RCP/Home">wiki</a>.</p>
<P>&nbsp;</P>
<H4>The Application Views</H4>
<P>Once the application is visible, you will be presented with the <A 
href="InitialView.htm">Initial View</A> (which is presented simply for some 
narrative, it provides no real functionality for the address book).&nbsp; The <A 
href="ContactsView.htm">Contacts View</A> provides all the functionality of the 
address book (such as it is).</P>
</body>
</html>
